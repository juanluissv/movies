{"ast":null,"code":"import _createForOfIteratorHelper from\"/Users/juanluissv/Desktop/movies/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import React,{useState,useEffect}from'react';import{Link}from'react-router-dom';import Loader from'./Loader';import{useDispatch,useSelector}from'react-redux';import{Row,Col,Image,ListGroup,Card,Button,Form}from'react-bootstrap';import{listMovieDetails,addMovieFavorites,removeMovieFavorites,listMyFavorites}from'../actions/movieActions';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Movie=function Movie(_ref){var match=_ref.match,history=_ref.history;var dispatch=useDispatch();var inFavorites;var newTitle;var movieDetails=useSelector(function(state){return state.movieDetails;});var movie=movieDetails.movie,loading=movieDetails.loading;var MovieFavorites=useSelector(function(state){return state.listMyFavorites;});var favoriteMovies=MovieFavorites.favoriteMovies,loading2=MovieFavorites.loading2;var userLogin=useSelector(function(state){return state.userLogin;});var userInfo=userLogin.userInfo;useEffect(function(){if(!userInfo){history.push('/login');}},[history,userInfo]);useEffect(function(){dispatch(listMovieDetails(match.params.id));dispatch(listMyFavorites());},[dispatch,match]);var addMovie=function addMovie(mymovie){var mymovie2={id:match.params.id,poster_path:movie.poster_path};dispatch(addMovieFavorites(mymovie2));history.push('/favorites');};var removeMovie=function removeMovie(id){dispatch(removeMovieFavorites(id));history.push('/favorites');};if(loading2==false){var _iterator=_createForOfIteratorHelper(favoriteMovies),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var iterator=_step.value;if(iterator.id==match.params.id){inFavorites=true;break;}else{inFavorites=false;}}}catch(err){_iterator.e(err);}finally{_iterator.f();}}return/*#__PURE__*/_jsx(_Fragment,{children:loading?/*#__PURE__*/_jsx(Loader,{}):/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{md:6,children:/*#__PURE__*/_jsx(Image,{src:\"https://image.tmdb.org/t/p/original/\".concat(movie.poster_path),fluid:true,className:\"movieImage\"})}),/*#__PURE__*/_jsxs(Col,{md:6,children:[/*#__PURE__*/_jsx(\"h3\",{className:\"movieDetailTitle\",children:movie.title}),/*#__PURE__*/_jsx(\"p\",{className:\"movieDetailDescription\",children:movie.overview}),/*#__PURE__*/_jsxs(\"p\",{className:\"movieDetailDescription\",children:[\"Rating: \",movie.vote_average]}),/*#__PURE__*/_jsx(\"p\",{className:\"movieDetailDescription\",children:/*#__PURE__*/_jsx(\"a\",{target:\"_blank\",href:\"https://www.youtube.com/results?search_query=\".concat(movie.title,\"+trailer\"),children:\"Trailer\"})}),inFavorites?/*#__PURE__*/_jsx(Button,{onClick:function onClick(){return removeMovie(movie.id);},className:\"btn btn-primary btn-lg favButton2\",children:\"Remove from Favorites\"}):/*#__PURE__*/_jsx(Button,{onClick:function onClick(){return addMovie(movie);},className:\"btn btn-primary btn-lg favButton\",children:\"Add To Favorites\"})]})]})});};export default Movie;","map":{"version":3,"sources":["/Users/juanluissv/Desktop/movies/frontend/src/components/Movie.js"],"names":["React","useState","useEffect","Link","Loader","useDispatch","useSelector","Row","Col","Image","ListGroup","Card","Button","Form","listMovieDetails","addMovieFavorites","removeMovieFavorites","listMyFavorites","Movie","match","history","dispatch","inFavorites","newTitle","movieDetails","state","movie","loading","MovieFavorites","favoriteMovies","loading2","userLogin","userInfo","push","params","id","addMovie","mymovie","mymovie2","poster_path","removeMovie","iterator","title","overview","vote_average"],"mappings":"wLAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,GAAT,CAAcC,GAAd,CAAmBC,KAAnB,CAA0BC,SAA1B,CAAqCC,IAArC,CAA2CC,MAA3C,CAAmDC,IAAnD,KAA+D,iBAA/D,CACA,OAASC,gBAAT,CAA2BC,iBAA3B,CAA8CC,oBAA9C,CAAoEC,eAApE,KAA2F,yBAA3F,C,6IAEA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,MAAsB,IAApBC,CAAAA,KAAoB,MAApBA,KAAoB,CAAbC,OAAa,MAAbA,OAAa,CAEhC,GAAMC,CAAAA,QAAQ,CAAGhB,WAAW,EAA5B,CAEA,GAAIiB,CAAAA,WAAJ,CACA,GAAIC,CAAAA,QAAJ,CAEA,GAAMC,CAAAA,YAAY,CAAGlB,WAAW,CAAC,SAAAmB,KAAK,QAAIA,CAAAA,KAAK,CAACD,YAAV,EAAN,CAAhC,CAPgC,GAQxBE,CAAAA,KARwB,CAQLF,YARK,CAQxBE,KARwB,CAQjBC,OARiB,CAQLH,YARK,CAQjBG,OARiB,CAUhC,GAAMC,CAAAA,cAAc,CAAGtB,WAAW,CAAC,SAAAmB,KAAK,QAAIA,CAAAA,KAAK,CAACR,eAAV,EAAN,CAAlC,CAVgC,GAWxBY,CAAAA,cAXwB,CAWKD,cAXL,CAWxBC,cAXwB,CAWRC,QAXQ,CAWKF,cAXL,CAWRE,QAXQ,CAahC,GAAMC,CAAAA,SAAS,CAAGzB,WAAW,CAAC,SAACmB,KAAD,QAAWA,CAAAA,KAAK,CAACM,SAAjB,EAAD,CAA7B,CAbgC,GAcxBC,CAAAA,QAdwB,CAcXD,SAdW,CAcxBC,QAdwB,CAgBhC9B,SAAS,CAAC,UAAM,CACZ,GAAG,CAAC8B,QAAJ,CAAc,CACVZ,OAAO,CAACa,IAAR,CAAa,QAAb,EACH,CACJ,CAJQ,CAIN,CAACb,OAAD,CAAUY,QAAV,CAJM,CAAT,CAOA9B,SAAS,CAAC,UAAM,CACZmB,QAAQ,CAACP,gBAAgB,CAACK,KAAK,CAACe,MAAN,CAAaC,EAAd,CAAjB,CAAR,CACAd,QAAQ,CAACJ,eAAe,EAAhB,CAAR,CACH,CAHQ,CAGP,CAACI,QAAD,CAAWF,KAAX,CAHO,CAAT,CAOA,GAAMiB,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,OAAD,CAAa,CAC1B,GAAMC,CAAAA,QAAQ,CAAG,CACbH,EAAE,CAAGhB,KAAK,CAACe,MAAN,CAAaC,EADL,CAEbI,WAAW,CAAGb,KAAK,CAACa,WAFP,CAAjB,CAIAlB,QAAQ,CAACN,iBAAiB,CAACuB,QAAD,CAAlB,CAAR,CACAlB,OAAO,CAACa,IAAR,CAAa,YAAb,EACH,CAPD,CASA,GAAMO,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACL,EAAD,CAAQ,CACxBd,QAAQ,CAACL,oBAAoB,CAACmB,EAAD,CAArB,CAAR,CACAf,OAAO,CAACa,IAAR,CAAa,YAAb,EACH,CAHD,CAMA,GAAIH,QAAQ,EAAI,KAAhB,CAAwB,0CACGD,cADH,YACpB,+CAAuC,IAA5BY,CAAAA,QAA4B,aACnC,GAAIA,QAAQ,CAACN,EAAT,EAAehB,KAAK,CAACe,MAAN,CAAaC,EAAhC,CAAoC,CAChCb,WAAW,CAAG,IAAd,CACA,MACH,CAHD,IAGO,CACHA,WAAW,CAAG,KAAd,CACH,CACJ,CARmB,qDASvB,CAID,mBACI,yBAEEK,OAAO,cAAG,KAAC,MAAD,IAAH,cACL,MAAC,GAAD,yBACQ,KAAC,GAAD,EAAK,EAAE,CAAE,CAAT,uBACA,KAAC,KAAD,EACQ,GAAG,+CAAyCD,KAAK,CAACa,WAA/C,CADX,CAEQ,KAAK,KAFb,CAEc,SAAS,CAAC,YAFxB,EADA,EADR,cAMQ,MAAC,GAAD,EAAK,EAAE,CAAE,CAAT,wBACI,WAAI,SAAS,CAAC,kBAAd,UAAkCb,KAAK,CAACgB,KAAxC,EADJ,cAEI,UAAG,SAAS,CAAC,wBAAb,UAAuChB,KAAK,CAACiB,QAA7C,EAFJ,cAGI,WAAG,SAAS,CAAC,wBAAb,sBAA+CjB,KAAK,CAACkB,YAArD,GAHJ,cAII,UAAG,SAAS,CAAC,wBAAb,uBACI,UAAG,MAAM,CAAC,QAAV,CACI,IAAI,wDAAkDlB,KAAK,CAACgB,KAAxD,YADR,qBADJ,EAJJ,CAUMpB,WAAW,cACT,KAAC,MAAD,EACA,OAAO,CAAE,yBAAMkB,CAAAA,WAAW,CAACd,KAAK,CAACS,EAAP,CAAjB,EADT,CAEA,SAAS,CAAC,mCAFV,mCADS,cAOT,KAAC,MAAD,EACA,OAAO,CAAE,yBAAMC,CAAAA,QAAQ,CAACV,KAAD,CAAd,EADT,CAEA,SAAS,CAAC,kCAFV,8BAjBR,GANR,GAHJ,EADJ,CAsCH,CAhGD,CAkGA,cAAeR,CAAAA,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Loader from './Loader'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap';\nimport { listMovieDetails, addMovieFavorites, removeMovieFavorites, listMyFavorites } from '../actions/movieActions';\n\nconst Movie = ({match, history}) => {\n\n    const dispatch = useDispatch()\n\n    let inFavorites;\n    let newTitle;\n    \n    const movieDetails = useSelector(state => state.movieDetails);\n    const { movie, loading } = movieDetails;\n\n    const MovieFavorites = useSelector(state => state.listMyFavorites)\n    const { favoriteMovies, loading2 } = MovieFavorites\n\n    const userLogin = useSelector((state) => state.userLogin)\n    const { userInfo } = userLogin\n\n    useEffect(() => {\n        if(!userInfo) {\n            history.push('/login')\n        }\n    }, [history, userInfo])\n    \n\n    useEffect(() => {         \n        dispatch(listMovieDetails(match.params.id))\n        dispatch(listMyFavorites())          \n    },[dispatch, match])\n\n\n\n    const addMovie = (mymovie) => {\n        const mymovie2 = {\n            id : match.params.id,\n            poster_path : movie.poster_path\n        }\n        dispatch(addMovieFavorites(mymovie2))\n        history.push('/favorites')\n    }\n\n    const removeMovie = (id) => {\n        dispatch(removeMovieFavorites(id))\n        history.push('/favorites')\n    }\n\n  \n    if (loading2 == false ) {\n        for (const iterator of favoriteMovies) {\n            if (iterator.id == match.params.id) {\n                inFavorites = true\n                break\n            } else {\n                inFavorites = false\n            } \n        }\n    }  \n\n    \n\n    return (\n        <>\n        \n        { loading ? <Loader /> :\n            <Row>\n                    <Col md={6}>\n                    <Image \n                            src={`https://image.tmdb.org/t/p/original/${movie.poster_path}`} \n                            fluid className=\"movieImage\" />\n                    </Col>\n                    <Col md={6}>\n                        <h3 className=\"movieDetailTitle\">{movie.title}</h3>\n                        <p className=\"movieDetailDescription\">{movie.overview}</p>\n                        <p className=\"movieDetailDescription\">Rating: {movie.vote_average}</p>\n                        <p className=\"movieDetailDescription\">\n                            <a target='_blank' \n                                href={`https://www.youtube.com/results?search_query=${movie.title}+trailer`}>\n                                Trailer\n                            </a>\n                        </p>\n                        { inFavorites ? \n                            <Button \n                            onClick={() => removeMovie(movie.id)}\n                            className=\"btn btn-primary btn-lg favButton2\">\n                            Remove from Favorites\n                            </Button>    \n                        :                    \n                            <Button \n                            onClick={() => addMovie(movie)}\n                            className=\"btn btn-primary btn-lg favButton\">\n                            Add To Favorites\n                            </Button> \n                        }\n                    </Col>\n            </Row>\n       }\n       </>\n    )\n}\n\nexport default Movie;"]},"metadata":{},"sourceType":"module"}