{"ast":null,"code":"import axios from 'axios';\nimport { USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL, USER_DETAILS_RESET } from '../constants/userConstants';\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/login', {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  dispatch({\n    type: USER_LOGOUT\n  });\n  dispatch({\n    type: USER_DETAILS_RESET\n  });\n};\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users', {\n      name,\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response\n    });\n  }\n};\nexport const getUserDetails = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'applocation/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get('/api/users/profile', config);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: error.response\n    });\n  }\n};","map":{"version":3,"sources":["/Users/juanluissv/Desktop/movies/frontend/src/actions/userActions.js"],"names":["axios","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","login","email","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","logout","removeItem","register","name","getUserDetails","getState","userLogin","userInfo","Authorization","token","get"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { \n    USER_REGISTER_REQUEST, \n    USER_REGISTER_SUCCESS, \n    USER_REGISTER_FAIL, \n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n    USER_LOGOUT,\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    USER_DETAILS_RESET\n} from '../constants/userConstants';\n\n\nexport const login = (email, password) => async(dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post('/api/users/login', {email, password }, config)\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n        localStorage.setItem('userInfo', JSON.stringify(data))\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: error.response\n        })\n    }\n}\n\nexport const logout = () => (dispatch) => {\n    localStorage.removeItem('userInfo')\n    dispatch({ type: USER_LOGOUT })\n    dispatch({ type: USER_DETAILS_RESET })\n}\n\n\nexport const register = (name, email, password) => async(dispatch) => {\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post('/api/users', {name, email, password}, config)\n\n        dispatch({\n            type:USER_REGISTER_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload: error.response\n        })\n    }\n}\n\n\nexport const getUserDetails = () => async(dispatch, getState) => {\n    \n    try {\n        dispatch({\n            type: USER_DETAILS_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'applocation/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get('/api/users/profile', config)\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n    } catch(error) {\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload: error.response\n        })\n\n    }\n}"]},"metadata":{},"sourceType":"module"}