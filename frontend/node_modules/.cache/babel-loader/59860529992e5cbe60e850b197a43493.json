{"ast":null,"code":"var _jsxFileName = \"/Users/juanluissv/Desktop/movies/frontend/src/components/Movie.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Loader from './Loader';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap';\nimport { listMovieDetails, addMovieFavorites, removeMovieFavorites, listMyFavorites } from '../actions/movieActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Movie = ({\n  match,\n  history\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  let inFavorites;\n  let newTitle;\n  const movieDetails = useSelector(state => state.movieDetails);\n  const {\n    movie,\n    loading\n  } = movieDetails;\n  const MovieFavorites = useSelector(state => state.listMyFavorites);\n  const {\n    favoriteMovies,\n    loading2\n  } = MovieFavorites;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login');\n    }\n  }, [history, userInfo]);\n  useEffect(() => {\n    dispatch(listMovieDetails(match.params.id));\n    dispatch(listMyFavorites());\n  }, [dispatch, match]);\n\n  const addMovie = mymovie => {\n    const mymovie2 = {\n      id: match.params.id,\n      poster_path: movie.poster_path\n    };\n    dispatch(addMovieFavorites(mymovie2));\n    history.push('/favorites');\n  };\n\n  const removeMovie = id => {\n    dispatch(removeMovieFavorites(id));\n    history.push('/favorites');\n  };\n\n  if (loading2 == false) {\n    for (const iterator of favoriteMovies) {\n      if (iterator.id == match.params.id) {\n        inFavorites = true;\n        break;\n      } else {\n        inFavorites = false;\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          src: `https://image.tmdb.org/t/p/original/${movie.poster_path}`,\n          fluid: true,\n          className: \"movieImage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"movieDetailTitle\",\n          children: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"movieDetailDescription\",\n          children: movie.overview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"movieDetailDescription\",\n          children: [\"Rating: \", movie.vote_average]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"movieDetailDescription\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            target: \"_blank\",\n            href: `https://www.youtube.com/results?search_query=${movie.title}+trailer`,\n            children: \"Trailer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this), inFavorites ? /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => removeMovie(movie.id),\n          className: \"btn btn-primary btn-lg favButton2\",\n          children: \"Remove from Favorites\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => addMovie(movie),\n          className: \"btn btn-primary btn-lg favButton\",\n          children: \"Add To Favorites\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Movie, \"bRddWD8wKIMxisB4zNKKvV9PmtU=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = Movie;\nexport default Movie;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"sources":["/Users/juanluissv/Desktop/movies/frontend/src/components/Movie.js"],"names":["React","useState","useEffect","Link","Loader","useDispatch","useSelector","Row","Col","Image","ListGroup","Card","Button","Form","listMovieDetails","addMovieFavorites","removeMovieFavorites","listMyFavorites","Movie","match","history","dispatch","inFavorites","newTitle","movieDetails","state","movie","loading","MovieFavorites","favoriteMovies","loading2","userLogin","userInfo","push","params","id","addMovie","mymovie","mymovie2","poster_path","removeMovie","iterator","title","overview","vote_average"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Loader from './Loader'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap';\nimport { listMovieDetails, addMovieFavorites, removeMovieFavorites, listMyFavorites } from '../actions/movieActions';\n\nconst Movie = ({match, history}) => {\n\n    const dispatch = useDispatch()\n\n    let inFavorites;\n    let newTitle;\n    \n    const movieDetails = useSelector(state => state.movieDetails);\n    const { movie, loading } = movieDetails;\n\n    const MovieFavorites = useSelector(state => state.listMyFavorites)\n    const { favoriteMovies, loading2 } = MovieFavorites\n\n    const userLogin = useSelector((state) => state.userLogin)\n    const { userInfo } = userLogin\n\n    useEffect(() => {\n        if(!userInfo) {\n            history.push('/login')\n        }\n    }, [history, userInfo])\n    \n\n    useEffect(() => {         \n        dispatch(listMovieDetails(match.params.id))\n        dispatch(listMyFavorites())          \n    },[dispatch, match])\n\n\n\n    const addMovie = (mymovie) => {\n        const mymovie2 = {\n            id : match.params.id,\n            poster_path : movie.poster_path\n        }\n        dispatch(addMovieFavorites(mymovie2))\n        history.push('/favorites')\n    }\n\n    const removeMovie = (id) => {\n        dispatch(removeMovieFavorites(id))\n        history.push('/favorites')\n    }\n\n  \n    if (loading2 == false ) {\n        for (const iterator of favoriteMovies) {\n            if (iterator.id == match.params.id) {\n                inFavorites = true\n                break\n            } else {\n                inFavorites = false\n            } \n        }\n    }  \n\n    \n\n    return (\n        <>\n        \n        { loading ? <Loader /> :\n            <Row>\n                    <Col md={6}>\n                    <Image \n                            src={`https://image.tmdb.org/t/p/original/${movie.poster_path}`} \n                            fluid className=\"movieImage\" />\n                    </Col>\n                    <Col md={6}>\n                        <h3 className=\"movieDetailTitle\">{movie.title}</h3>\n                        <p className=\"movieDetailDescription\">{movie.overview}</p>\n                        <p className=\"movieDetailDescription\">Rating: {movie.vote_average}</p>\n                        <p className=\"movieDetailDescription\">\n                            <a target='_blank' \n                                href={`https://www.youtube.com/results?search_query=${movie.title}+trailer`}>\n                                Trailer\n                            </a>\n                        </p>\n                        { inFavorites ? \n                            <Button \n                            onClick={() => removeMovie(movie.id)}\n                            className=\"btn btn-primary btn-lg favButton2\">\n                            Remove from Favorites\n                            </Button>    \n                        :                    \n                            <Button \n                            onClick={() => addMovie(movie)}\n                            className=\"btn btn-primary btn-lg favButton\">\n                            Add To Favorites\n                            </Button> \n                        }\n                    </Col>\n            </Row>\n       }\n       </>\n    )\n}\n\nexport default Movie;"]},"metadata":{},"sourceType":"module"}