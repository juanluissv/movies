{"ast":null,"code":"import { MOVIES_LIST_FAIL, MOVIES_LIST_SUCCESS, MOVIES_LIST_REQUEST, MOVIES_DETAILS_REQUEST, MOVIES_DETAILS_SUCCESS, MOVIES_DETAILS_FAIL, SEARCH_MOVIE_REQUEST, SEARCH_MOVIE_SUCCESS, SEARCH_MOVIE_FAIL, GENDER_LIST_REQUEST, GENDER_LIST_SUCCESS, GENDER_LIST_FAIL, ADD_MOVIE_FAVORITE_REQUEST, ADD_MOVIE_FAVORITE_SUCCESS, ADD_MOVIE_FAVORITE_FAIL, LIST_MOVIE_FAVORITE_REQUEST, LIST_MOVIE_FAVORITE_SUCCESS, LIST_MOVIE_FAVORITE_FAIL, REMOVE_MOVIE_FAVORITE_REQUEST, REMOVE_MOVIE_FAVORITE_SUCCESS, REMOVE_MOVIE_FAVORITE_FAIL } from '../constants/movieConstants';\nimport axios from 'axios';\nexport const listMovies = () => async dispatch => {\n  try {\n    dispatch({\n      type: MOVIES_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&api_key=805be512078ad6fc74aec232fda73689&language=en-US&page=1&include_adult=false`);\n    dispatch({\n      type: MOVIES_LIST_SUCCESS,\n      payload: data.results\n    });\n  } catch (error) {\n    dispatch({\n      type: MOVIES_LIST_FAIL,\n      payload: error.response\n    });\n  }\n};\nexport const listMovieDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: MOVIES_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`https://api.themoviedb.org/3/movie/${id}?api_key=805be512078ad6fc74aec232fda73689&language=en-US`);\n    dispatch({\n      type: MOVIES_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: MOVIES_DETAILS_FAIL,\n      payload: error.response\n    });\n  }\n};\nexport const searchMovie = title => async dispatch => {\n  try {\n    dispatch({\n      type: SEARCH_MOVIE_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=805be512078ad6fc74aec232fda73689&language=en-US&query=${title}`);\n    dispatch({\n      type: SEARCH_MOVIE_SUCCESS,\n      payload: data.results\n    });\n  } catch (error) {\n    dispatch({\n      type: SEARCH_MOVIE_FAIL,\n      payload: error.response\n    });\n  }\n};\nexport const addMovieFavorites = movie => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ADD_MOVIE_FAVORITE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/favorites', movie, config);\n    dispatch({\n      type: ADD_MOVIE_FAVORITE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ADD_MOVIE_FAVORITE_FAIL,\n      payload: error.response\n    });\n  }\n};\nexport const removeMovieFavorites = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: REMOVE_MOVIE_FAVORITE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.delete(`/api/favorites/myfavorites/${id}`, config);\n    dispatch({\n      type: REMOVE_MOVIE_FAVORITE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: REMOVE_MOVIE_FAVORITE_FAIL,\n      payload: error.response\n    });\n  }\n};\nexport const listMyFavorites = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: LIST_MOVIE_FAVORITE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get('/api/favorites/myfavorites', config);\n    dispatch({\n      type: LIST_MOVIE_FAVORITE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: LIST_MOVIE_FAVORITE_FAIL,\n      payload: error.response\n    });\n  }\n};\nexport const genderListMovies = gender => async dispatch => {\n  try {\n    dispatch({\n      type: GENDER_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`https://api.themoviedb.org/3/discover/movie?api_key=805be512078ad6fc74aec232fda73689&with_genres=${gender}&language=en-US`);\n    dispatch({\n      type: GENDER_LIST_SUCCESS,\n      payload: data.results\n    });\n  } catch (error) {\n    dispatch({\n      type: GENDER_LIST_FAIL,\n      payload: error.response\n    });\n  }\n};","map":{"version":3,"sources":["/Users/juanluissv/Desktop/movies/frontend/src/actions/movieActions.js"],"names":["MOVIES_LIST_FAIL","MOVIES_LIST_SUCCESS","MOVIES_LIST_REQUEST","MOVIES_DETAILS_REQUEST","MOVIES_DETAILS_SUCCESS","MOVIES_DETAILS_FAIL","SEARCH_MOVIE_REQUEST","SEARCH_MOVIE_SUCCESS","SEARCH_MOVIE_FAIL","GENDER_LIST_REQUEST","GENDER_LIST_SUCCESS","GENDER_LIST_FAIL","ADD_MOVIE_FAVORITE_REQUEST","ADD_MOVIE_FAVORITE_SUCCESS","ADD_MOVIE_FAVORITE_FAIL","LIST_MOVIE_FAVORITE_REQUEST","LIST_MOVIE_FAVORITE_SUCCESS","LIST_MOVIE_FAVORITE_FAIL","REMOVE_MOVIE_FAVORITE_REQUEST","REMOVE_MOVIE_FAVORITE_SUCCESS","REMOVE_MOVIE_FAVORITE_FAIL","axios","listMovies","dispatch","type","data","get","payload","results","error","response","listMovieDetails","id","searchMovie","title","addMovieFavorites","movie","getState","userLogin","userInfo","config","headers","Authorization","token","post","removeMovieFavorites","delete","listMyFavorites","genderListMovies","gender"],"mappings":"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","sourcesContent":["import { MOVIES_LIST_FAIL, \n         MOVIES_LIST_SUCCESS, \n         MOVIES_LIST_REQUEST,\n         MOVIES_DETAILS_REQUEST,\n         MOVIES_DETAILS_SUCCESS,\n         MOVIES_DETAILS_FAIL,\n         SEARCH_MOVIE_REQUEST,\n         SEARCH_MOVIE_SUCCESS,\n         SEARCH_MOVIE_FAIL,\n         GENDER_LIST_REQUEST,\n         GENDER_LIST_SUCCESS,\n         GENDER_LIST_FAIL,      \n         ADD_MOVIE_FAVORITE_REQUEST,\n         ADD_MOVIE_FAVORITE_SUCCESS,\n         ADD_MOVIE_FAVORITE_FAIL,\n         LIST_MOVIE_FAVORITE_REQUEST,\n         LIST_MOVIE_FAVORITE_SUCCESS,\n         LIST_MOVIE_FAVORITE_FAIL,\n         REMOVE_MOVIE_FAVORITE_REQUEST,\n         REMOVE_MOVIE_FAVORITE_SUCCESS,\n         REMOVE_MOVIE_FAVORITE_FAIL\n} from '../constants/movieConstants';\nimport axios from 'axios';\n\n\n\nexport const listMovies = () => async (dispatch) => {\n    try {\n        dispatch({\n            type: MOVIES_LIST_REQUEST\n        })\n        \n        const { data } = await axios.get(`https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&api_key=805be512078ad6fc74aec232fda73689&language=en-US&page=1&include_adult=false`)\n\n        dispatch({\n            type: MOVIES_LIST_SUCCESS,\n            payload: data.results\n        })\n\n    } catch (error) {\n        dispatch({\n            type: MOVIES_LIST_FAIL,\n            payload: error.response\n        })\n\n    }\n}\n\nexport const listMovieDetails = (id) => async (dispatch) => {\n    try {\n        dispatch({\n            type: MOVIES_DETAILS_REQUEST\n        })\n\n        const { data } = await axios.get(`https://api.themoviedb.org/3/movie/${id}?api_key=805be512078ad6fc74aec232fda73689&language=en-US`)\n\n        dispatch({\n            type: MOVIES_DETAILS_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: MOVIES_DETAILS_FAIL,\n            payload: error.response\n        })\n    }\n}\n\n\nexport const searchMovie = (title) => async (dispatch) => {\n    try {\n        dispatch({\n            type: SEARCH_MOVIE_REQUEST\n        })\n        \n        const { data } = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=805be512078ad6fc74aec232fda73689&language=en-US&query=${title}`)\n        \n        dispatch({\n            type: SEARCH_MOVIE_SUCCESS,\n            payload: data.results\n        })\n\n    } catch (error) {\n        dispatch({\n            type: SEARCH_MOVIE_FAIL,\n            payload: error.response\n        })\n\n    }\n}\n\n\n\nexport const  addMovieFavorites = (movie) => async(dispatch, getState) => {\n\n    try {\n        dispatch({\n            type: ADD_MOVIE_FAVORITE_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post('/api/favorites', movie, config)\n\n        dispatch({\n            type: ADD_MOVIE_FAVORITE_SUCCESS,\n            payload: data,\n        })\n            \n    } catch(error) {\n        dispatch({\n            type: ADD_MOVIE_FAVORITE_FAIL,\n            payload: error.response\n        })\n    }\n}\n\n\n\nexport const removeMovieFavorites = (id) => async(dispatch, getState) => {\n    try{\n        dispatch({\n            type: REMOVE_MOVIE_FAVORITE_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.delete(`/api/favorites/myfavorites/${id}`, config)\n\n        dispatch({\n            type: REMOVE_MOVIE_FAVORITE_SUCCESS,\n            payload: data,\n        })\n\n    } catch (error) {\n        dispatch({\n            type: REMOVE_MOVIE_FAVORITE_FAIL,\n            payload: error.response\n        })\n\n    }\n}\n\n\n\nexport const listMyFavorites = () => async(dispatch, getState) => {\n    try {\n        dispatch({\n            type: LIST_MOVIE_FAVORITE_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get('/api/favorites/myfavorites', config)\n\n        dispatch({\n            type: LIST_MOVIE_FAVORITE_SUCCESS,\n            payload: data \n        })\n\n    } catch (error) {\n        dispatch({\n            type: LIST_MOVIE_FAVORITE_FAIL,\n            payload: error.response\n        })\n    }\n}\n\n\n\n\n\nexport const genderListMovies = (gender) => async (dispatch) => {\n    try {\n        dispatch({\n            type: GENDER_LIST_REQUEST\n        })\n\n        const { data } = await axios.get(`https://api.themoviedb.org/3/discover/movie?api_key=805be512078ad6fc74aec232fda73689&with_genres=${gender}&language=en-US`)\n\n        dispatch({\n            type: GENDER_LIST_SUCCESS,\n            payload: data.results\n        })\n    } catch (error) {\n        dispatch({\n            type: GENDER_LIST_FAIL,\n            payload: error.response\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}